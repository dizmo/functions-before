{"version":3,"sources":["before.js"],"names":["Object","defineProperty","exports","value","before","fn","callback","args","apply","bind","concat","default"],"mappings":"AAAA;AACA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA;;;;;;;;AAQA,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,QAApB,EAA8B;AAC1B,WAAO,YAAmB;AAAA,0CAANC,IAAM;AAANA,gBAAM;AAAA;;AACtB,YAAID,SAASE,KAAT,CAAe,IAAf,EAAqB,CAACH,GAAGI,IAAH,CAAQ,IAAR,CAAD,EAAgBC,MAAhB,CAAuBH,IAAvB,CAArB,MAAuD,KAA3D,EAAkE;AAC9D,mBAAOF,GAAGG,KAAH,CAAS,IAAT,EAAeD,IAAf,CAAP;AACH;AACJ,KAJD;AAKH;AACDL,QAAQE,MAAR,GAAiBA,MAAjB;AACAF,QAAQS,OAAR,GAAkBP,MAAlB","file":"before.js","sourcesContent":["\"use strict\";\n/* tslint:disable:ban-types trailing-comma */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns a method decorator taking a callback, which will be invoked\n * before the execution of the decorated function, *unless* the callback\n * returns `false`.\n *\n * @param fn a function to be decorated\n * @param callback a handler to be invoked beforehand\n */\nfunction before(fn, callback) {\n    return function (...args) {\n        if (callback.apply(this, [fn.bind(this)].concat(args)) !== false) {\n            return fn.apply(this, args);\n        }\n    };\n}\nexports.before = before;\nexports.default = before;\n"]}